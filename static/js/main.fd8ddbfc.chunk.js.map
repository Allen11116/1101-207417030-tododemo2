{"version":3,"sources":["components/Modal_30.js","components/Backdrop_30.js","components/Todo_30.js","App_30.js","reportWebVitals.js","index.js"],"names":["Modal_30","props","className","text","onClick","onClose","Backdrop_30","Todo_30","useState","showModal","setshowModal","closeModalHandler","App_30","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gMAYeA,MAZf,SAAkBC,GAEd,OACI,sBAAKC,UAAU,QAAf,UACI,4BAAID,EAAME,OACV,wBAAQD,UAAU,eAAeE,QAASH,EAAMI,QAAhD,oBACA,wBAAQH,UAAU,MAAME,QAASH,EAAMI,QAAvC,yBCMGC,MAZf,SAAqBL,GAEjB,OAEI,qBAAKC,UAAU,WAAWE,QAASH,EAAMI,WC4BlCE,MA3Bf,SAAiBN,GACb,MAAkCO,qBAAlC,mBAAOC,EAAP,KAAkBC,EAAlB,KAMA,SAASC,IACLD,GAAa,GAGjB,OAEI,gCACI,sBAAKR,UAAU,OAAf,UACI,6BAAKD,EAAME,OACX,qBAAKD,UAAU,UAAf,SACI,wBAAQA,UAAU,MAAME,QAdxC,WACIM,GAAa,IAaD,yBAGPD,GAAa,cAAC,EAAD,CAAaJ,QAASM,IACnCF,GAAa,cAAC,EAAD,CAAUN,KAAK,gBAAgBE,QAASM,Q,MCZnDC,MAXf,WACE,OACE,gCACA,0CACA,cAAC,EAAD,CAAST,KAAK,iBACd,cAAC,EAAD,CAASA,KAAK,eACd,cAAC,EAAD,CAASA,KAAK,sBCGHU,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.fd8ddbfc.chunk.js","sourcesContent":["function Modal_30(props) {\r\n\r\n    return (\r\n        <div className=\"modal\">\r\n            <p>{props.text}</p>\r\n            <button className=\"btn btn--alt\" onClick={props.onClose}>Cancel</button>\r\n            <button className=\"btn\" onClick={props.onClose}>confirm</button>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Modal_30;","function Backdrop_30(props) {\r\n\r\n    return (\r\n\r\n        <div className=\"backdrop\" onClick={props.onClose}></div>\r\n\r\n    )\r\n\r\n}\r\n\r\n\r\n\r\nexport default Backdrop_30;","import { useState } from 'react';\r\nimport Modal_30 from '../components/Modal_30';\r\nimport Backdrop_30 from '../components/Backdrop_30';\r\n\r\n\r\nfunction Todo_30(props) {\r\n    const [showModal, setshowModal] = useState();\r\n\r\n    function showModalHandler() {\r\n        setshowModal(true);\r\n    }\r\n\r\n    function closeModalHandler() {\r\n        setshowModal(false);\r\n    }\r\n\r\n    return (\r\n\r\n        <div>\r\n            <div className=\"card\">\r\n                <h2>{props.text}</h2>\r\n                <div className=\"actions\">\r\n                    <button className=\"btn\" onClick={showModalHandler} >Delete</button>\r\n                </div>\r\n            </div>\r\n            {showModal && <Backdrop_30 onClose={closeModalHandler} />}\r\n            {showModal && <Modal_30 text='Are you sure?' onClose={closeModalHandler} />}\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Todo_30;","import Todo_30 from'./components/Todo_30'\r\nimport './App.css';\r\n\r\nfunction App_30() {\r\n  return (\r\n    <div>\r\n    <h1>My Todos</h1>\r\n    <Todo_30 text=\"Leaarn React\"></Todo_30>\r\n    <Todo_30 text=\"Leaarn SQK\"></Todo_30>\r\n    <Todo_30 text=\"Leaarn NextJS\"></Todo_30>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App_30;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App_30';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport App_30 from './App_30';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App_30 />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}